Metadata-Version: 1.1
Name: pyrk
Version: 0.0.0
Summary: Transient Neutron Kinetics Simulation in 0D.
Home-page: http://github.com/katyhuff/pyrk/
Author: Kathryn D. Huff
Author-email: katyhuff@gmail.com
License: BSD 3-Clause License
Description: # PyRK
        
        Welcome to PyRK. This is a solver tool for coupled neutronic and thermal
        hydraulic reactor transient analysis in 0-D. It is in active development.
        Please correspond directly with the author for suggestions about use,
        additional documentation, etc.
        
        ## Installation
        
        Detailed instructions will be present in the upcoming user's guide. However,
        for now, install this as you would any other pure python module
        
            python setup.py install
        
        If you use --prefix, be sure to add the path to your PYTHONPATH environment
        variable.
        
        ## License
        
        The license for this work can be found
        [here](https://github.com/katyhuff/pyrk/blob/master/licenses/LICENSE). Please
        be respectful of my intellectual work by communicating with me about its use,
        understanding its limitations, and citing me where appropriate. I would be
        thrilled to work with you on improving it.
        
        
        ## Contribution
        
        This repository is a work in progress. I would love it if you wanted to
        contribute to this code here in this repository. [Here is some information about
        how to do that.](https://github.com/katyhuff/pyrk/blob/master/CONTRIBUTING.md).
        
        ## Other
        
        - You will find the current state of the test suite on our [Travis continuous
        integration servers](https://travis-ci.org/katyhuff/pyrk).
        - A website with documentation is forthcoming. Currently, you can build the
          documnetation locally in the doc directory by typing "make html". You must
          have sphinx installed.
        
        
        ### Thanks for Your Help!
        
        Contributing is so kind of you. In pyrk, all contributions, bug reports, bug
        fixes, documentation improvements, enhancements and ideas are welcome.
        
        The [GitHub "issues" tab](https://github.com/katyhuff/pyrk/issues)
        contains some issues labeled "first PR". Those are open issues that would be a
        good quick way to get started. Browse them to see if you want to get started on
        one.
        
        #### Bug Reports
        
          - Please include a short but detailed, self-contained Python snippet or
            explanation for reproducing the problem.
        
          - Explain what the expected behavior was, and what you saw instead.
        
        ##### Pull Requests
        
          - **Make sure the test suite passes** on your computer. To do so, run `nosetests` in the tests directory.
          - Please reference relevant Github issues in your commit message using `GH1234`
            or `#1234`. 
          - Changes should be PEP8 compatible [PEP8](http://www.python.org/dev/peps/pep-0008/).
          - Keep style fixes to a separate commit to make your PR more readable.
          - Docstrings ideally follow the [numpydoc](https://github.com/numpy/numpy/blob/master/doc/HOWTO_DOCUMENT.rst.txt) format.
          - Write tests.
          - When writing tests, please.
          - When you start working on a PR, start by creating a new branch pointing at the latest
            commit on github master.
          - Please avoid rebasing if possible. Nothing wrong with rebase... it is just confusing for @katyhuff .
          - The pyrk copyright policy is detailed in the pyrk [LICENSE](https://github.com/katyhuff/pyrk/blob/master/LICENSE).
        
        #### More developer docs
        
        * We are working on it. 
        
        
        #### Meta
        Note, this contributing file was adapted from the one at the
        [pandas](https://github.com/pydata/pandas) repo. Thanks pandas! 
        
Platform: any
Classifier: Development Status :: 1 - Planning
Classifier: Intended Audience :: Education
Classifier: Intended Audience :: Science/Research
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: BSD 3-Clause
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Scientific/Engineering
Classifier: Topic :: Scientific/Engineering :: Physics
Classifier: Topic :: Software Development :: Libraries :: Python Modules
